[{"C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\index.js":"1","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\reportWebVitals.js":"2","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\App.js":"3","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\Login_component.js":"4","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\Signup_component.js":"5","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\home_login.js":"6","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Navbar\\Navbar.js":"7","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\Access_token.js":"8"},{"size":593,"mtime":1608134532023,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1608134532024,"results":"11","hashOfConfig":"10"},{"size":2030,"mtime":1608200519696,"results":"12","hashOfConfig":"10"},{"size":5334,"mtime":1608134532020,"results":"13","hashOfConfig":"10"},{"size":5584,"mtime":1608134532021,"results":"14","hashOfConfig":"10"},{"size":4997,"mtime":1608200401375,"results":"15","hashOfConfig":"10"},{"size":3030,"mtime":1608134532022,"results":"16","hashOfConfig":"10"},{"size":838,"mtime":1608202699451,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"19s6rfd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\index.js",[],["37","38"],"C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\reportWebVitals.js",[],"C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\App.js",[],"C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\Login_component.js",[],"C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\Signup_component.js",[],"C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\home_login.js",["39"],"import React, {Fragment, useState} from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport Img from '../../style/img/logo.png'\r\nimport Google from '../../style/img/google.png'\r\nimport Facebook from '../../style/img/facebook.png'\r\nimport Git from '../../style/img/Github.png'\r\n\r\nexport default function Home_login({setisLogged, isLogged}) {\r\n\r\n    let history = useHistory();\r\n\r\n    /* Création d'une function requête Asynchrone recevant l'email et le mdp entré */\r\n    const authentification = async (email, mdp) => {\r\n        try {\r\n            /*Création d'une requête appelant la route login */\r\n            let res = await Axios({\r\n                method: \"POST\",\r\n                url: \"http://localhost:8080/authenticate\",\r\n\r\n                /* Envoie des données dans la requête*/\r\n                data: {\r\n                    username: email,\r\n                    password: mdp\r\n                }\r\n            })\r\n            console.log(res.data);\r\n            /* Enregistrement du token et de l'email dans le local Storage*/\r\n            localStorage.setItem('token', res.data.token);\r\n            localStorage.setItem('id', res.data.id);\r\n            localStorage.setItem('IsLogged', true);\r\n\r\n            setisLogged(true)\r\n\r\n\r\n            history.push('/Users');\r\n\r\n        } catch (e) {\r\n            /* Alerte de l'erreur */\r\n            alert(\"Invalid credential \" + e);\r\n            setisLogged(false)\r\n        }\r\n    }\r\n\r\n    // Handle de l'input email\r\n    const [Email,\r\n        setEmail] = useState('');\r\n    // Handle de l'input Mdp\r\n    const [Mdp,\r\n        setMdp] = useState('');\r\n\r\n    // Handle au click sur le bouton Login\r\n    const handleSubmit = () => {\r\n        // Authentification avec comme paramètre Email et Mdp\r\n        authentification(Email, Mdp)\r\n\r\n    }\r\n    const loginbutton = () => {\r\n        history.push(\"Sign-in\")\r\n    }\r\n    const Home = () => {\r\n        return (\r\n                <Fragment >\r\n                    <div className=\" container margin-top\">\r\n                        <div className=\" auth-inner\">\r\n                            <div className=\"form-group text-center auth-inner-icon\">\r\n                                <img src={Img} className=\"iconPirate\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"form-group margin-top input-field\">\r\n                                {/* Email Input */}\r\n                                <input\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className=\"input\"\r\n                                    name=\"email\"\r\n                                    onChange={event => setEmail(event.target.value)} required/>\r\n                                <label htmlFor=\"email\" className=\"labelinput\">Email</label>\r\n                            </div>\r\n                            <div className=\"form-group input-field\">\r\n\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"input\"\r\n                                    id=\"mdp\"\r\n                                    name=\"mdp\"\r\n                                    onChange={event => setMdp(event.target.value)} required/>\r\n                                <label htmlFor=\"mdp\" className=\"labelinput\">Password</label>\r\n\r\n                            </div>\r\n                            <div className=\"form-group margin-top\">\r\n                                <button className=\"bobutton connexion\" onClick={() => handleSubmit()}>\r\n                                    Sign in with your email\r\n                                </button>\r\n                                <h6 className=\"or\">- or -</h6>\r\n                                <button className=\"bobutton google\">\r\n                                    <img src={Google} className=\"btnGoogle\" alt=\"\"/>\r\n                                    Sign in with Google\r\n                                </button>\r\n                                <button className=\"bobutton fb\">\r\n                                    <img src={Facebook} className=\"btnFacebook\" alt=\"\"/>\r\n                                    Sign in with Facebook\r\n                                </button>\r\n                                <button className=\"bobutton git\">\r\n                                    <img src={Git} className=\"btnGit\" alt=\"\"/>\r\n                                    Sign in with GitHub\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-center links margin-top italic\">\r\n                                Don't have an account?<Link to={\"/Sign-up\"}> Sign Up</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    /* Return du component */\r\n    return Home()\r\n\r\n}\r\n/**/\r\n","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Navbar\\Navbar.js",["40","41"],"import React, {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Img from '../../style/img/logo.png'\r\n\r\nexport default function Navbar({isLogged, setisLogged}) {\r\n    /* Déconnexion en nettoyant le local Storage et en mettant le store.IsLogged à false */\r\n    const logout = () => {\r\n        if (window.confirm('Logout?')) {\r\n            alert('Vous êtes maintenant deconnecté');\r\n            localStorage.clear();\r\n            /* Variable false à renvoyer vers le store Redux*/\r\n            const Trueing = {\r\n                type: 'AUTH',\r\n                IsLog: false\r\n            }\r\n            /* Renvoie de la variable vers le store Redux (Variable globale)*/\r\n            setisLogged(false)\r\n        }\r\n    }\r\n\r\n    /* Si l'utilisateur est Logged on return le contenu de cette fonction*/\r\n    function Logged() {\r\n        return (\r\n            <Fragment>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to={\"/\"}>HOME</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to={\"/Users\"}>PROFILE</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to={\"/\"} onClick={() => logout()}>LOG OUT</Link>\r\n                </li>\r\n            </Fragment>\r\n        )\r\n    }\r\n    /* Si l'utilisateur n'est pas Logged on return le contenu de cette fonction*/\r\n    function Notlogged() {\r\n        return (\r\n            <Fragment>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to={\"/\"}>HOME</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to={\"/Sign-in\"}>Sign in</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to={\"/sign-up\"}>Register</Link>\r\n                </li>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    /* Verification function in order to print or not logged or sign in*/\r\n    function LogInOut() {\r\n        /* Recuperate the value of store.IsLogged*/\r\n        /* If IsLogged = true we print Logged, if not we print NotLogged*/\r\n\r\n        if (isLogged) {\r\n            return Logged();\r\n        }\r\n\r\n        return Notlogged();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <nav className=\"white\">\r\n                <div className=\"nav-wrapper\">\r\n                    <img src={Img}  width='50px' className=\"brand-logo\" alt=''/>\r\n                    <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n                        <i className=\"material-icons\">menu</i>\r\n                    </a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        {LogInOut()}\r\n                    </ul>\r\n\r\n                </div>\r\n            </nav>\r\n            <div className=\"sidenav\" id=\"mobile-demo\">\r\n                {LogInOut()}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}","C:\\Users\\johnb\\Desktop\\epitech\\java\\John\\John\\frontdash_board\\src\\Components\\Log\\Access_token.js",["42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":58,"column":11,"nodeType":"49","messageId":"50","endLine":58,"endColumn":22},{"ruleId":"47","severity":1,"message":"51","line":12,"column":19,"nodeType":"49","messageId":"50","endLine":12,"endColumn":26},{"ruleId":"52","severity":1,"message":"53","line":73,"column":21,"nodeType":"54","endLine":73,"endColumn":87},{"ruleId":"47","severity":1,"message":"55","line":1,"column":9,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'loginbutton' is assigned a value but never used.","Identifier","unusedVar","'Trueing' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]